{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "candidateId",
          "type": "uint256"
        }
      ],
      "name": "votedEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "candidateCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateId",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Election.sol"
  },
  "ast": {
    "absolutePath": "contracts/Election.sol",
    "exportedSymbols": {
      "Election": [
        96
      ]
    },
    "id": 97,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Election",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96
        ],
        "name": "Election",
        "nameLocation": "66:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Election.Candidate",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "114:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "109:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "133:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "126:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "152:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "147:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "147:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "89:9:0",
            "nodeType": "StructDefinition",
            "scope": 96,
            "src": "82:86:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9a981a3",
            "id": 10,
            "mutability": "mutable",
            "name": "candidateCount",
            "nameLocation": "186:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "174:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "174:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3477ee2e",
            "id": 15,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "241:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "207:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
              "typeString": "mapping(uint256 => struct Election.Candidate)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 11,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "215:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "207:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                "typeString": "mapping(uint256 => struct Election.Candidate)"
              },
              "valueType": {
                "id": 13,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "223:9:0"
                },
                "referencedDeclaration": 8,
                "src": "223:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$8_storage_ptr",
                  "typeString": "struct Election.Candidate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 19,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "290:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "258:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 17,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "fff3c900d938d21d0990d786e819f29b8d05c1ef587b462b939609625b684b16",
            "id": 23,
            "name": "votedEvent",
            "nameLocation": "309:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "candidateId",
                  "nameLocation": "334:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "321:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "320:26:0"
            },
            "src": "303:44:0"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "367:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616e6469646174652031",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "390:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41f9dcbd43e9b33194759b5a51b1df9864cdc2b2138ff106f03091eb79861f0c",
                          "typeString": "literal_string \"Candidate 1\""
                        },
                        "value": "Candidate 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_41f9dcbd43e9b33194759b5a51b1df9864cdc2b2138ff106f03091eb79861f0c",
                          "typeString": "literal_string \"Candidate 1\""
                        }
                      ],
                      "id": 26,
                      "name": "addCandidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "377:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "377:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "377:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616e6469646174652032",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "427:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1f17440f69835dafba5c9fd0e4caa6c780807a80f8d1745ec7af1408d6cca4a",
                          "typeString": "literal_string \"Candidate 2\""
                        },
                        "value": "Candidate 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f1f17440f69835dafba5c9fd0e4caa6c780807a80f8d1745ec7af1408d6cca4a",
                          "typeString": "literal_string \"Candidate 2\""
                        }
                      ],
                      "id": 30,
                      "name": "addCandidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "414:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "414:27:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "364:2:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:0:0"
            },
            "scope": 96,
            "src": "353:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "505:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "515:16:0",
                    "subExpression": {
                      "id": 40,
                      "name": "candidateCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "515:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "515:16:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "541:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                          "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                        }
                      },
                      "id": 45,
                      "indexExpression": {
                        "id": 44,
                        "name": "candidateCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "552:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "541:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$8_storage",
                        "typeString": "struct Election.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47,
                          "name": "candidateCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "580:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 48,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "596:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "603:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46,
                        "name": "Candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "570:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Candidate_$8_storage_ptr_$",
                          "typeString": "type(struct Election.Candidate storage pointer)"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$8_memory_ptr",
                        "typeString": "struct Election.Candidate memory"
                      }
                    },
                    "src": "541:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$8_storage",
                      "typeString": "struct Election.Candidate storage ref"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "541:64:0"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCandidate",
            "nameLocation": "463:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "490:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "476:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:21:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:0"
            },
            "scope": 96,
            "src": "454:158:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "658:330:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "728:19:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 60,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "729:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "expression": {
                              "id": 61,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "736:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "736:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "729:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "720:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "720:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "720:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 68,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "807:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "822:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "807:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 71,
                            "name": "_candidateId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "827:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 72,
                            "name": "candidateCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "843:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "827:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "807:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "799:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "799:59:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 77,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "869:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 80,
                      "indexExpression": {
                        "expression": {
                          "id": 78,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "876:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "876:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "869:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "890:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "869:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "869:25:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "905:36:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 84,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "905:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                            "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                          }
                        },
                        "id": 86,
                        "indexExpression": {
                          "id": 85,
                          "name": "_candidateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "916:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "905:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$8_storage",
                          "typeString": "struct Election.Candidate storage ref"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "905:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "905:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 91,
                        "name": "_candidateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "968:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "votedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "957:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "EmitStatement",
                  "src": "952:29:0"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "627:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_candidateId",
                  "nameLocation": "637:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "632:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "631:19:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:0"
            },
            "scope": 96,
            "src": "618:370:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 97,
        "src": "57:934:0",
        "usedErrors": []
      }
    ],
    "src": "32:960:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060408051808201909152600b81526a43616e646964617465203160a81b602082015261003c9061006c565b60408051808201909152600b81526a21b0b73234b230ba32901960a91b60208201526100679061006c565b61025a565b60008054908061007b836100d5565b9091555050604080516060810182526000805480835260208084018681528486018490529183526001908190529390912082518155905191929091908201906100c4908261019b565b506040820151816002015590505050565b6000600182016100f557634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061012657607f821691505b60208210810361014657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561019657600081815260208120601f850160051c810160208610156101735750805b601f850160051c820191505b818110156101925782815560010161017f565b5050505b505050565b81516001600160401b038111156101b4576101b46100fc565b6101c8816101c28454610112565b8461014c565b602080601f8311600181146101fd57600084156101e55750858301515b600019600386901b1c1916600185901b178555610192565b600085815260208120601f198616915b8281101561022c5788860151825594840194600190910190840161020d565b508582101561024a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61036a806102696000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f146100515780633477ee2e14610066578063a3ec138d14610091578063a9a981a3146100c4575b600080fd5b61006461005f366004610225565b6100db565b005b610079610074366004610225565b61017b565b6040516100889392919061023e565b60405180910390f35b6100b461009f3660046102a3565b60026020526000908152604090205460ff1681565b6040519015158152602001610088565b6100cd60005481565b604051908152602001610088565b3360009081526002602052604090205460ff16156100f857600080fd5b60008111801561010a57506000548111155b61011357600080fd5b336000908152600260208181526040808420805460ff19166001908117909155858552909152822001805491610148836102d3565b909155505060405181907ffff3c900d938d21d0990d786e819f29b8d05c1ef587b462b939609625b684b1690600090a250565b60016020819052600091825260409091208054918101805461019c906102fa565b80601f01602080910402602001604051908101604052809291908181526020018280546101c8906102fa565b80156102155780601f106101ea57610100808354040283529160200191610215565b820191906000526020600020905b8154815290600101906020018083116101f857829003601f168201915b5050505050908060020154905083565b60006020828403121561023757600080fd5b5035919050565b83815260006020606081840152845180606085015260005b8181101561027257868101830151858201608001528201610256565b81811115610284576000608083870101525b5060408401949094525050601f91909101601f19160160800192915050565b6000602082840312156102b557600080fd5b81356001600160a01b03811681146102cc57600080fd5b9392505050565b6000600182016102f357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061030e57607f821691505b60208210810361032e57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122014682c65046b68ffa97140566249dca5b48eede0362ad904c797c96b9fbfb68364736f6c634300080f0033",
  "bytecodeSha1": "3ad2be6bd37743eba7ed3dc86f9db6a6fe017614",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Election",
  "coverageMap": {
    "branches": {
      "0": {
        "Election.vote": {
          "5": [
            728,
            747,
            true
          ],
          "6": [
            807,
            823,
            false
          ],
          "7": [
            827,
            857,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Election.vote": {
          "0": [
            720,
            748
          ],
          "1": [
            799,
            858
          ],
          "2": [
            869,
            894
          ],
          "3": [
            905,
            941
          ],
          "4": [
            952,
            981
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f146100515780633477ee2e14610066578063a3ec138d14610091578063a9a981a3146100c4575b600080fd5b61006461005f366004610225565b6100db565b005b610079610074366004610225565b61017b565b6040516100889392919061023e565b60405180910390f35b6100b461009f3660046102a3565b60026020526000908152604090205460ff1681565b6040519015158152602001610088565b6100cd60005481565b604051908152602001610088565b3360009081526002602052604090205460ff16156100f857600080fd5b60008111801561010a57506000548111155b61011357600080fd5b336000908152600260208181526040808420805460ff19166001908117909155858552909152822001805491610148836102d3565b909155505060405181907ffff3c900d938d21d0990d786e819f29b8d05c1ef587b462b939609625b684b1690600090a250565b60016020819052600091825260409091208054918101805461019c906102fa565b80601f01602080910402602001604051908101604052809291908181526020018280546101c8906102fa565b80156102155780601f106101ea57610100808354040283529160200191610215565b820191906000526020600020905b8154815290600101906020018083116101f857829003601f168201915b5050505050908060020154905083565b60006020828403121561023757600080fd5b5035919050565b83815260006020606081840152845180606085015260005b8181101561027257868101830151858201608001528201610256565b81811115610284576000608083870101525b5060408401949094525050601f91909101601f19160160800192915050565b6000602082840312156102b557600080fd5b81356001600160a01b03811681146102cc57600080fd5b9392505050565b6000600182016102f357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061030e57607f821691505b60208210810361032e57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122014682c65046b68ffa97140566249dca5b48eede0362ad904c797c96b9fbfb68364736f6c634300080f0033",
  "deployedSourceMap": "57:934:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:370;;;;;;:::i;:::-;;:::i;:::-;;207:44;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;258:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1402:14:1;;1395:22;1377:41;;1365:2;1350:18;258:38:0;1237:187:1;174:26:0;;;;;;;;;1575:25:1;;;1563:2;1548:18;174:26:0;1429:177:1;618:370:0;736:10;729:18;;;;:6;:18;;;;;;;;728:19;720:28;;;;;;822:1;807:12;:16;:50;;;;;843:14;;827:12;:30;;807:50;799:59;;;;;;876:10;869:18;;;;:6;:18;;;;;;;;:25;;-1:-1:-1;;869:25:0;890:4;869:25;;;;;;905:24;;;;;;;;:34;:36;;;;;;:::i;:::-;;;;-1:-1:-1;;957:24:0;;968:12;;957:24;;;;;618:370;:::o;207:44::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:742::-;404:6;393:9;386:25;367:4;430:2;468;463;452:9;448:18;441:30;500:6;494:13;543:6;538:2;527:9;523:18;516:34;568:1;578:141;592:6;589:1;586:13;578:141;;;688:14;;;684:23;;678:30;653:17;;;672:3;649:27;642:67;607:10;;578:141;;;737:6;734:1;731:13;728:92;;;808:1;802:3;793:6;782:9;778:22;774:32;767:43;728:92;-1:-1:-1;923:2:1;908:18;;901:34;;;;-1:-1:-1;;881:2:1;860:15;;;;-1:-1:-1;;856:29:1;841:45;888:3;837:55;;199:742;-1:-1:-1;;199:742:1:o;946:286::-;1005:6;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1100:23;;-1:-1:-1;;;;;1152:31:1;;1142:42;;1132:70;;1198:1;1195;1188:12;1132:70;1221:5;946:286;-1:-1:-1;;;946:286:1:o;1611:232::-;1650:3;1671:17;;;1668:140;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1668:140;-1:-1:-1;1835:1:1;1824:13;;1611:232::o;1848:380::-;1927:1;1923:12;;;;1970;;;1991:61;;2045:4;2037:6;2033:17;2023:27;;1991:61;2098:2;2090:6;2087:14;2067:18;2064:38;2061:161;;2144:10;2139:3;2135:20;2132:1;2125:31;2179:4;2176:1;2169:15;2207:4;2204:1;2197:15;2061:161;;1848:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    991
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xA9A981A3 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0xDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88 JUMP JUMPDEST PUSH2 0xCD PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x10A JUMPI POP PUSH1 0x0 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 ADD DUP1 SLOAD SWAP2 PUSH2 0x148 DUP4 PUSH2 0x2D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xFFF3C900D938D21D0990D786E819F29B8D05C1EF587B462B939609625B684B16 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH2 0x19C SWAP1 PUSH2 0x2FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8 SWAP1 PUSH2 0x2FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x215 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x215 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x272 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x256 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE POP POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x80 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x30E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x32E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ PUSH9 0x2C65046B68FFA97140 JUMP PUSH3 0x49DCA5 0xB4 DUP15 0xED 0xE0 CALLDATASIZE 0x2A 0xD9 DIV 0xC7 SWAP8 0xC9 PUSH12 0x9FBFB68364736F6C63430008 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3477EE2E"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3EC138D"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9A981A3"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        991
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "85": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F"
    },
    "88": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "89": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "91": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "94": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        618,
        988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "95": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "96": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB"
    },
    "99": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        618,
        988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "STOP",
      "path": "0"
    },
    "102": {
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79"
    },
    "106": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74"
    },
    "109": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "110": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "112": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "115": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "116": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "117": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "120": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "121": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "122": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "124": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "125": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "128": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "129": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "130": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "131": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "132": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E"
    },
    "135": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "136": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "139": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "140": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "141": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "142": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "143": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "144": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "RETURN",
      "path": "0"
    },
    "145": {
      "offset": [
        258,
        296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "149": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "152": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "153": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "155": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A3"
    },
    "158": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        258,
        296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "159": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "160": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "162": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "164": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "165": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "167": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "168": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "169": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "170": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "172": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "173": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "174": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "175": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "177": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "AND",
      "path": "0"
    },
    "178": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "179": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "180": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "183": {
      "fn": "Election.vote",
      "offset": [
        258,
        296
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "184": {
      "op": "SWAP1"
    },
    "185": {
      "op": "ISZERO"
    },
    "186": {
      "op": "ISZERO"
    },
    "187": {
      "op": "DUP2"
    },
    "188": {
      "op": "MSTORE"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "191": {
      "op": "ADD"
    },
    "192": {
      "offset": [
        258,
        296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "195": {
      "op": "JUMP"
    },
    "196": {
      "offset": [
        174,
        200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "200": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "202": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "203": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "204": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "Election.vote",
      "offset": [
        174,
        200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "209": {
      "op": "SWAP1"
    },
    "210": {
      "op": "DUP2"
    },
    "211": {
      "op": "MSTORE"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "214": {
      "op": "ADD"
    },
    "215": {
      "offset": [
        174,
        200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "218": {
      "op": "JUMP"
    },
    "219": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "220": {
      "fn": "Election.vote",
      "offset": [
        736,
        746
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "221": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "224": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "225": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "226": {
      "fn": "Election.vote",
      "offset": [
        729,
        735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "228": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "230": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "231": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "233": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "234": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "235": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "236": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "238": {
      "fn": "Election.vote",
      "offset": [
        729,
        747
      ],
      "op": "AND",
      "path": "0"
    },
    "239": {
      "branch": 5,
      "fn": "Election.vote",
      "offset": [
        728,
        747
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "240": {
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "243": {
      "branch": 5,
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "244": {
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "246": {
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "REVERT",
      "path": "0"
    },
    "248": {
      "fn": "Election.vote",
      "offset": [
        720,
        748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "Election.vote",
      "offset": [
        822,
        823
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "251": {
      "fn": "Election.vote",
      "offset": [
        807,
        819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "252": {
      "branch": 6,
      "fn": "Election.vote",
      "offset": [
        807,
        823
      ],
      "op": "GT",
      "path": "0"
    },
    "253": {
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "DUP1",
      "path": "0"
    },
    "254": {
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "255": {
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "258": {
      "branch": 6,
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "259": {
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "POP",
      "path": "0"
    },
    "260": {
      "fn": "Election.vote",
      "offset": [
        843,
        857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "Election.vote",
      "offset": [
        843,
        857
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "263": {
      "fn": "Election.vote",
      "offset": [
        827,
        839
      ],
      "op": "DUP2",
      "path": "0"
    },
    "264": {
      "fn": "Election.vote",
      "offset": [
        827,
        857
      ],
      "op": "GT",
      "path": "0"
    },
    "265": {
      "branch": 7,
      "fn": "Election.vote",
      "offset": [
        827,
        857
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "266": {
      "fn": "Election.vote",
      "offset": [
        807,
        857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "270": {
      "branch": 7,
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "fn": "Election.vote",
      "offset": [
        799,
        858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Election.vote",
      "offset": [
        876,
        886
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "277": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "279": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "280": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "281": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "282": {
      "fn": "Election.vote",
      "offset": [
        869,
        875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "284": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "286": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "287": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "288": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "289": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "291": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "DUP1",
      "path": "0"
    },
    "292": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "DUP5",
      "path": "0"
    },
    "293": {
      "fn": "Election.vote",
      "offset": [
        869,
        887
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "294": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "298": {
      "op": "NOT"
    },
    "299": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "AND",
      "path": "0"
    },
    "300": {
      "fn": "Election.vote",
      "offset": [
        890,
        894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "302": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "303": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "OR",
      "path": "0"
    },
    "305": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "306": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "307": {
      "fn": "Election.vote",
      "offset": [
        869,
        894
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "308": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 3
    },
    "309": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "DUP6",
      "path": "0"
    },
    "310": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "311": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "312": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "313": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "314": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "DUP3",
      "path": "0"
    },
    "315": {
      "fn": "Election.vote",
      "offset": [
        905,
        929
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "316": {
      "fn": "Election.vote",
      "offset": [
        905,
        939
      ],
      "op": "ADD",
      "path": "0"
    },
    "317": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "318": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "319": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "320": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "323": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "324": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "327": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        905,
        941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "330": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "331": {
      "fn": "Election.vote",
      "offset": [
        905,
        941
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "332": {
      "op": "POP"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x40"
    },
    "336": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "fn": "Election.vote",
      "offset": [
        968,
        980
      ],
      "op": "DUP2",
      "path": "0"
    },
    "338": {
      "fn": "Election.vote",
      "offset": [
        968,
        980
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "339": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xFFF3C900D938D21D0990D786E819F29B8D05C1EF587B462B939609625B684B16"
    },
    "372": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "375": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "Election.vote",
      "offset": [
        957,
        981
      ],
      "op": "LOG2",
      "path": "0"
    },
    "377": {
      "fn": "Election.vote",
      "offset": [
        618,
        988
      ],
      "op": "POP",
      "path": "0"
    },
    "378": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        618,
        988
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "382": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "384": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "385": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "387": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "389": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "390": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "391": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "392": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "394": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "395": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "396": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "397": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "398": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "399": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "400": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "401": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "402": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "404": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C"
    },
    "407": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "408": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "411": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "412": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "413": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "416": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "417": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "419": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "420": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "421": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DIV",
      "path": "0"
    },
    "422": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MUL",
      "path": "0"
    },
    "423": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "425": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "426": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "428": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "429": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "432": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "435": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "437": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "438": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "439": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "440": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "441": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "442": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "444": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "445": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "446": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "447": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "448": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "451": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "452": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "455": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "458": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "459": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "462": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "463": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "464": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "466": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "LT",
      "path": "0"
    },
    "467": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "470": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "474": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "476": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "477": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DIV",
      "path": "0"
    },
    "478": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MUL",
      "path": "0"
    },
    "479": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "480": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "481": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "482": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "484": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "485": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "486": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "489": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "490": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "491": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "492": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "493": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "494": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "497": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "500": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "502": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "503": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "505": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "506": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "507": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "508": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "509": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "512": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "513": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "514": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "516": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "517": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "518": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "519": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "GT",
      "path": "0"
    },
    "520": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "523": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "524": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "525": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "526": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SUB",
      "path": "0"
    },
    "527": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "529": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "AND",
      "path": "0"
    },
    "530": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "531": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "532": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "535": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "536": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "537": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "538": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "539": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "540": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "543": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "ADD",
      "path": "0"
    },
    "544": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "545": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "546": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "POP",
      "path": "0"
    },
    "547": {
      "fn": "Election.vote",
      "offset": [
        207,
        251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "548": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        207,
        251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "op": "JUMPDEST"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "554": {
      "op": "DUP3"
    },
    "555": {
      "op": "DUP5"
    },
    "556": {
      "op": "SUB"
    },
    "557": {
      "op": "SLT"
    },
    "558": {
      "op": "ISZERO"
    },
    "559": {
      "op": "PUSH2",
      "value": "0x237"
    },
    "562": {
      "op": "JUMPI"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "565": {
      "op": "DUP1"
    },
    "566": {
      "op": "REVERT"
    },
    "567": {
      "op": "JUMPDEST"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "op": "CALLDATALOAD"
    },
    "570": {
      "op": "SWAP2"
    },
    "571": {
      "op": "SWAP1"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "jump": "o",
      "op": "JUMP"
    },
    "574": {
      "op": "JUMPDEST"
    },
    "575": {
      "op": "DUP4"
    },
    "576": {
      "op": "DUP2"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "584": {
      "op": "DUP2"
    },
    "585": {
      "op": "DUP5"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "MSTORE"
    },
    "588": {
      "op": "DUP5"
    },
    "589": {
      "op": "MLOAD"
    },
    "590": {
      "op": "DUP1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "593": {
      "op": "DUP6"
    },
    "594": {
      "op": "ADD"
    },
    "595": {
      "op": "MSTORE"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "598": {
      "op": "JUMPDEST"
    },
    "599": {
      "op": "DUP2"
    },
    "600": {
      "op": "DUP2"
    },
    "601": {
      "op": "LT"
    },
    "602": {
      "op": "ISZERO"
    },
    "603": {
      "op": "PUSH2",
      "value": "0x272"
    },
    "606": {
      "op": "JUMPI"
    },
    "607": {
      "op": "DUP7"
    },
    "608": {
      "op": "DUP2"
    },
    "609": {
      "op": "ADD"
    },
    "610": {
      "op": "DUP4"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MLOAD"
    },
    "613": {
      "op": "DUP6"
    },
    "614": {
      "op": "DUP3"
    },
    "615": {
      "op": "ADD"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "DUP3"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "625": {
      "op": "JUMP"
    },
    "626": {
      "op": "JUMPDEST"
    },
    "627": {
      "op": "DUP2"
    },
    "628": {
      "op": "DUP2"
    },
    "629": {
      "op": "GT"
    },
    "630": {
      "op": "ISZERO"
    },
    "631": {
      "op": "PUSH2",
      "value": "0x284"
    },
    "634": {
      "op": "JUMPI"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "639": {
      "op": "DUP4"
    },
    "640": {
      "op": "DUP8"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "op": "JUMPDEST"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "648": {
      "op": "DUP5"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "op": "SWAP5"
    },
    "651": {
      "op": "SWAP1"
    },
    "652": {
      "op": "SWAP5"
    },
    "653": {
      "op": "MSTORE"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "658": {
      "op": "SWAP2"
    },
    "659": {
      "op": "SWAP1"
    },
    "660": {
      "op": "SWAP2"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "664": {
      "op": "NOT"
    },
    "665": {
      "op": "AND"
    },
    "666": {
      "op": "ADD"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "op": "SWAP3"
    },
    "671": {
      "op": "SWAP2"
    },
    "672": {
      "op": "POP"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "jump": "o",
      "op": "JUMP"
    },
    "675": {
      "op": "JUMPDEST"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "680": {
      "op": "DUP3"
    },
    "681": {
      "op": "DUP5"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "op": "SLT"
    },
    "684": {
      "op": "ISZERO"
    },
    "685": {
      "op": "PUSH2",
      "value": "0x2B5"
    },
    "688": {
      "op": "JUMPI"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "op": "REVERT"
    },
    "693": {
      "op": "JUMPDEST"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "CALLDATALOAD"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "702": {
      "op": "SHL"
    },
    "703": {
      "op": "SUB"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "AND"
    },
    "706": {
      "op": "DUP2"
    },
    "707": {
      "op": "EQ"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "711": {
      "op": "JUMPI"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "REVERT"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "SWAP4"
    },
    "718": {
      "op": "SWAP3"
    },
    "719": {
      "op": "POP"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "jump": "o",
      "op": "JUMP"
    },
    "723": {
      "op": "JUMPDEST"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "DUP3"
    },
    "729": {
      "op": "ADD"
    },
    "730": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "733": {
      "op": "JUMPI"
    },
    "734": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "741": {
      "op": "SHL"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "SWAP1"
    },
    "761": {
      "jump": "o",
      "op": "JUMP"
    },
    "762": {
      "op": "JUMPDEST"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "DUP2"
    },
    "766": {
      "op": "DUP2"
    },
    "767": {
      "op": "SHR"
    },
    "768": {
      "op": "SWAP1"
    },
    "769": {
      "op": "DUP3"
    },
    "770": {
      "op": "AND"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "op": "PUSH2",
      "value": "0x30E"
    },
    "775": {
      "op": "JUMPI"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "778": {
      "op": "DUP3"
    },
    "779": {
      "op": "AND"
    },
    "780": {
      "op": "SWAP2"
    },
    "781": {
      "op": "POP"
    },
    "782": {
      "op": "JUMPDEST"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "785": {
      "op": "DUP3"
    },
    "786": {
      "op": "LT"
    },
    "787": {
      "op": "DUP2"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "op": "PUSH2",
      "value": "0x32E"
    },
    "792": {
      "op": "JUMPI"
    },
    "793": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "813": {
      "op": "REVERT"
    },
    "814": {
      "op": "JUMPDEST"
    },
    "815": {
      "op": "POP"
    },
    "816": {
      "op": "SWAP2"
    },
    "817": {
      "op": "SWAP1"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d80eb54d869cc4f9eafc44402dad4921a18173c1",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Election {\n\n    struct Candidate {\n        uint id;\n        string name;\n        uint voteCount;\n    }\n\n    uint public candidateCount;\n\n    mapping(uint => Candidate) public candidates;\n\n    mapping(address => bool) public voters;\n\n    event votedEvent (uint indexed candidateId);\n\n    constructor() {\n        addCandidate(\"Candidate 1\");\n        addCandidate(\"Candidate 2\");\n    }\n\n    function addCandidate(string memory _name) private {\n        candidateCount++;\n        candidates[candidateCount] = Candidate(candidateCount, _name, 0);\n    }\n\n    function vote(uint _candidateId) public {\n        // ensure voter hasn't already voted before\n        require(!voters[msg.sender]);\n\n        // ensure candidate id is valid\n        require(_candidateId > 0 && _candidateId <= candidateCount);\n\n        voters[msg.sender] = true;\n\n        candidates[_candidateId].voteCount++;\n\n        emit votedEvent(_candidateId);\n    }\n\n}\n",
  "sourceMap": "57:934:0:-:0;;;353:95;;;;;;;;;-1:-1:-1;377:27:0;;;;;;;;;;;;-1:-1:-1;;;377:27:0;;;;;;:12;:27::i;:::-;414;;;;;;;;;;;;-1:-1:-1;;;414:27:0;;;;;;:12;:27::i;:::-;57:934;;454:158;515:14;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;;570:35:0;;;;;;;;-1:-1:-1;580:14:0;;570:35;;;;;;;;;;;;;;;;541:26;;;:10;:26;;;;;;;;:64;;;;;;570:35;;541:26;;:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;454:158;:::o;14:232:1:-;53:3;74:17;;;71:140;;133:10;128:3;124:20;121:1;114:31;168:4;165:1;158:15;196:4;193:1;186:15;71:140;-1:-1:-1;238:1:1;227:13;;14:232::o;251:127::-;312:10;307:3;303:20;300:1;293:31;343:4;340:1;333:15;367:4;364:1;357:15;383:380;462:1;458:12;;;;505;;;526:61;;580:4;572:6;568:17;558:27;;526:61;633:2;625:6;622:14;602:18;599:38;596:161;;679:10;674:3;670:20;667:1;660:31;714:4;711:1;704:15;742:4;739:1;732:15;596:161;;383:380;;;:::o;894:545::-;996:2;991:3;988:11;985:448;;;1032:1;1057:5;1053:2;1046:17;1102:4;1098:2;1088:19;1172:2;1160:10;1156:19;1153:1;1149:27;1143:4;1139:38;1208:4;1196:10;1193:20;1190:47;;;-1:-1:-1;1231:4:1;1190:47;1286:2;1281:3;1277:12;1274:1;1270:20;1264:4;1260:31;1250:41;;1341:82;1359:2;1352:5;1349:13;1341:82;;;1404:17;;;1385:1;1374:13;1341:82;;;1345:3;;;985:448;894:545;;;:::o;1615:1352::-;1735:10;;-1:-1:-1;;;;;1757:30:1;;1754:56;;;1790:18;;:::i;:::-;1819:97;1909:6;1869:38;1901:4;1895:11;1869:38;:::i;:::-;1863:4;1819:97;:::i;:::-;1971:4;;2035:2;2024:14;;2052:1;2047:663;;;;2754:1;2771:6;2768:89;;;-1:-1:-1;2823:19:1;;;2817:26;2768:89;-1:-1:-1;;1572:1:1;1568:11;;;1564:24;1560:29;1550:40;1596:1;1592:11;;;1547:57;2870:81;;2017:944;;2047:663;841:1;834:14;;;878:4;865:18;;-1:-1:-1;;2083:20:1;;;2201:236;2215:7;2212:1;2209:14;2201:236;;;2304:19;;;2298:26;2283:42;;2396:27;;;;2364:1;2352:14;;;;2231:19;;2201:236;;;2205:3;2465:6;2456:7;2453:19;2450:201;;;2526:19;;;2520:26;-1:-1:-1;;2609:1:1;2605:14;;;2621:3;2601:24;2597:37;2593:42;2578:58;2563:74;;2450:201;-1:-1:-1;;;;;2697:1:1;2681:14;;;2677:22;2664:36;;-1:-1:-1;1615:1352:1:o;:::-;57:934:0;;;;;;",
  "sourcePath": "contracts/Election.sol",
  "type": "contract"
}